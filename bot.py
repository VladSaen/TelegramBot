import os
import logging
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, 
    CommandHandler, 
    MessageHandler, 
    filters, 
    ContextTypes
)

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")
WEBHOOK_URL = os.getenv("RENDER_URL") # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–º—ñ–Ω–Ω—É, —è–∫—É –≤–∏ –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–∏–ª–∏

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏. –Ø–∫—â–æ WEBHOOK_URL —î, –º–∏ –≤ —Ä–µ–∂–∏–º—ñ Webhook.
IS_WEBHOOK_MODE = bool(WEBHOOK_URL)

# –ü–æ—Ä—Ç, —è–∫–∏–π –Ω–∞–¥–∞—î Render
PORT = int(os.environ.get('PORT', 8080))

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)
# --------------------

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞–¥—Å–∏–ª–∞—î –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."""
    logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {update.effective_user.id} –∑–∞–ø—É—Å—Ç–∏–≤ /start")
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! ‚ö° –ù–∞–¥—ñ—à–ª—ñ—Ç—å –∑–∞—è–≤–∫—É –∞–±–æ —Ñ–æ—Ç–æ, —ñ —è –ø–µ—Ä–µ–¥–∞–º —Ü–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )

# –û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –≤—Ö—ñ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ç–µ–∫—Å—Ç –∞–±–æ —Ñ–æ—Ç–æ) —ñ –ø–µ—Ä–µ—Å–∏–ª–∞—î —ó—Ö –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    message = update.message
    user_name = message.from_user.username or message.from_user.first_name
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ ADMIN_ID –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    try:
        admin_chat_id = int(ADMIN_ID)
    except (ValueError, TypeError):
        logger.error("ADMIN_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∞–±–æ –º–∞—î –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç.")
        await message.reply_text("‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –±–æ—Ç–∞. –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.")
        return

    # –§–æ—Ç–æ
    if message.photo:
        photo_file = await message.photo[-1].get_file()
        try:
            await context.bot.send_photo(
                chat_id=admin_chat_id,
                photo=photo_file.file_id,
                caption=f"üì∑ –§–æ—Ç–æ –≤—ñ–¥ @{user_name} ({message.from_user.id})"
            )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ñ–æ—Ç–æ –∞–¥–º—ñ–Ω—É: {e}")
            await message.reply_text("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ñ–æ—Ç–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            return

    # –¢–µ–∫—Å—Ç
    elif message.text:
        try:
            await context.bot.send_message(
                chat_id=admin_chat_id,
                text=f"üì© –ó–∞—è–≤–∫–∞ –≤—ñ–¥ @{user_name} ({message.from_user.id}):\n{message.text}"
            )
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ç–µ–∫—Å—Ç—É –∞–¥–º—ñ–Ω—É: {e}")
            await message.reply_text("‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –∑–∞—è–≤–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            return

    # –í—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    await message.reply_text("‚úÖ –î—è–∫—É—é! –ó–∞—è–≤–∫—É –ø–µ—Ä–µ–¥–∞–Ω–æ ‚ö°")


async def pre_run(app):
    """–§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º Webhook."""
    if IS_WEBHOOK_MODE and WEBHOOK_URL:
        # –ü–†–ò–ú–£–°–û–í–ï –í–ò–î–ê–õ–ï–ù–ù–Ø –°–¢–ê–†–û–ì–û WEBHOOK
        logger.info("–°–ø—Ä–æ–±–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –±—É–¥—å-—è–∫–∏–π —Å—Ç–∞—Ä–∏–π Webhook...")
        await app.bot.delete_webhook()
        logger.info("–°—Ç–∞—Ä–∏–π Webhook –≤–∏–¥–∞–ª–µ–Ω–æ (—è–∫—â–æ –≤—ñ–Ω –±—É–≤).")


def main():
    """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î –±–æ—Ç (Webhook –¥–ª—è Render, Polling –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É)."""
    if not BOT_TOKEN or not ADMIN_ID:
        logger.critical("BOT_TOKEN –∞–±–æ ADMIN_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞.")
        return
        
    app = ApplicationBuilder().token(BOT_TOKEN).post_init(pre_run).build()
    
    # –î–æ–¥–∞—î–º–æ —Ö–µ–Ω–¥–ª–µ—Ä–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))

    # --- –õ–û–ì–Ü–ö–ê –ó–ê–ü–£–°–ö–£ ---
    if IS_WEBHOOK_MODE:
        # –†–µ–∂–∏–º Webhook –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω-—Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (Render)
        full_webhook_url = WEBHOOK_URL.rstrip('/') + '/' + BOT_TOKEN
        
        logger.info(f"‚úÖ –†–µ–∂–∏–º WEBHOOK. –ü–æ—Ä—Ç: {PORT}. URL: {full_webhook_url}")
        
        # –¶–µ –¥–æ–∑–≤–æ–ª—è—î Application –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ ASGI-–∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫, —è–∫–∏–π –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏ –≤—ñ–¥ Render.
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            url_path=BOT_TOKEN,
            webhook_url=full_webhook_url
        )

    else:
        # –†–µ–∂–∏–º Polling –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ (—Ü–µ —Ç–µ, —â–æ —É –≤–∞—Å –∑–∞—Ä–∞–∑ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –Ω–∞ Render)
        logger.info("‚ùå –†–µ–∂–∏–º POLLING. –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ RENDER_URL –¥–ª—è Webhook.")
        # –©–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ Conflict error, –º–∏ –Ω–µ –±—É–¥–µ–º–æ –∑–∞–ø—É—Å–∫–∞—Ç–∏ Polling –Ω–∞ Render
        # –Ø–∫—â–æ Render_URL –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ª–æ–≥—ñ–∫–∞ Webhook –Ω–µ —Å–ø—Ä–∞—Ü—å–æ–≤—É—î, —ñ –±–æ—Ç –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–±–æ—Ç—É
        # –¶–µ –∑–∞–ø–æ–±—ñ–≥–∞—î –∑–∞–≤–∏—Å–∞–Ω–Ω—é —Å–ª—É–∂–±–∏ Render.
        
        # app.run_polling(poll_interval=10) # –ó–∞–∫–æ–º–µ–Ω—Ç—É—î–º–æ, —â–æ–± –Ω–µ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É–≤–∞—Ç–∏
        logger.info("–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ä–µ–∂–∏–º—ñ Polling –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ Render.")

if __name__ == "__main__":
    main()
